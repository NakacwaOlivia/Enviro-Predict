#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <DHT.h>
#include <ThingSpeak.h>

// Define the pins and sensor types
#define DHTPIN 4
#define DHTTYPE DHT11

const char* ssid = "dataminds";
const char* password = "dataminds";
const char* apiKey = "D00LOCZ5YDS9HPTS";

// ThingSpeak server
const char* server = "api.thingspeak.com";

// Pin assignments for various sensors
int soundSensorPin = 34;  // Analog pin for sound sensor
int mq9SensorPin = 33;    // Analog pin for MQ9 sensor
int MQ135_PIN_CO2 = 35;   // Analog pin connected to the MQ135 sensor for CO2
int MQ135_PIN_Benzene = 36; // Analog pin connected to the MQ135 sensor for Benzene
int dhtDataPin = DHTPIN;       // Digital pin for DHT11 sensor

DHT dht(DHTPIN, DHTTYPE);
WiFiClient client;
LiquidCrystal_I2C lcd(0x27, 16, 2);  // LCD address: 0x27, 16 chars and 2-line display

// Function to read simulated PM2.5 sensor data
float readPM25Value() {
  // Placeholder for simulating PM2.5 sensor data
  return random(0, 100);
}

// Function to generate a random sound value
int generateRandomSoundValue() {
  // Generate a random sound value between 40 and 60 BPM
  return random(40, 61);
}

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  dht.begin();
  lcd.init(); // Initialize the LCD
  lcd.backlight();  // Turn on the backlight
  lcd.setCursor(0, 0);
  lcd.print("ENVIRO-PREDICT+");  // Display a message
}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;

    float soundValue = generateRandomSoundValue();  // Random sound value between 40 and 60 BPM
    float mq9Value = analogRead(mq9SensorPin);
    float pm25Value = readPM25Value();
    float coValue = analogRead(MQ135_PIN_CO2);
    float benzeneValue = analogRead(MQ135_PIN_Benzene);

    float temperature = dht.readTemperature();
    float humidity = dht.readHumidity();

    int httpResponseCode;

    Serial.print("Sound Value: ");
    Serial.println(soundValue);
    Serial.print("MQ9 Value: ");
    Serial.println(mq9Value);
    Serial.print("PM2.5 Value: ");
    Serial.println(pm25Value);
    Serial.print("Temperature: ");
    Serial.print(temperature);
    Serial.print(" Â°C, Humidity: ");
    Serial.print(humidity);
    Serial.println(" %");
    Serial.print("MQ135 Value for Benzene: ");
    Serial.println(benzeneValue);
    Serial.print("MQ135 Value for CO2: ");
    Serial.println(coValue);

    ThingSpeak.begin(client);
    ThingSpeak.setField(1, temperature);
    ThingSpeak.setField(2, humidity);
    ThingSpeak.setField(3, soundValue);
    ThingSpeak.setField(6, pm25Value);
    ThingSpeak.setField(5, mq9Value);
    ThingSpeak.setField(8, coValue);
    ThingSpeak.setField(7, benzeneValue);

    httpResponseCode = ThingSpeak.writeFields(2279455, apiKey);

    Serial.print("HTTP Response code: ");
    Serial.println(httpResponseCode);

    lcd.clear();  // Clear the LCD display
    lcd.setCursor(0, 0);
    lcd.print("Temp: ");
    lcd.print(temperature);
    lcd.print("C  Humidity: ");
    lcd.print(humidity);
    lcd.setCursor(0, 1);
    lcd.print("CO2: ");
    lcd.print(coValue);
    lcd.print(" ppm");
  } else {
    Serial.println("WiFi Disconnected");
  }

  delay(5000);  // Delay for 5 seconds
}
